AWSTemplateFormatVersion: "2010-09-09"
Description: Sparkrock Test Infrastructure - EC2 + S3 + CloudWatch

Parameters:
  KeyName:
    Type: String
    Description: Name of an existing EC2 KeyPair to enable SSH access

  LatestAmiId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-x86_64

Resources:
  SparkrockSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH, HTTP, HTTPS
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

  SparkrockInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.micro
      KeyName: !Ref KeyName
      ImageId: !Ref LatestAmiId
      SecurityGroupIds:
        - !Ref SparkrockSecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 30
            VolumeType: gp3
      UserData:
        Fn::Base64: |
          #!/bin/bash
          yum update -y
          amazon-linux-extras enable docker
          yum install -y docker git
          service docker start
          usermod -aG docker ec2-user
          curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
          echo "Docker & docker-compose installed"

  SparkrockEIP:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref SparkrockInstance

  SparkrockBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub sparkrock-logs-${AWS::AccountId}-${AWS::Region}
      VersioningConfiguration:
        Status: Enabled

  SparkrockCPUAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: "CPU utilization > 70%"
      Namespace: AWS/EC2
      MetricName: CPUUtilization
      Dimensions:
        - Name: InstanceId
          Value: !Ref SparkrockInstance
      Statistic: Average
      Period: 60
      EvaluationPeriods: 1
      Threshold: 70
      ComparisonOperator: GreaterThanThreshold
      AlarmActions: []  # can hook SNS here

Outputs:
  InstanceId:
    Description: EC2 Instance Id
    Value: !Ref SparkrockInstance

  ElasticIP:
    Description: Public Elastic IP of the instance
    Value: !Ref SparkrockEIP

  S3BucketName:
    Description: Bucket name for logs
    Value: !Ref SparkrockBucket

